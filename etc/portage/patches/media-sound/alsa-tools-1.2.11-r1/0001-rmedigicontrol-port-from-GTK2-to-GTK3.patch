From e9beb0aef6d7c06e6898050743efb27336cf6d62 Mon Sep 17 00:00:00 2001
From: genBTC <genBTC@gmx.com>
Date: Thu, 6 Mar 2025 19:34:34 -0500
Subject: [PATCH] rmedigicontrol/: port from GTK2 to GTK3

Signed-off-by: genBTC <genBTC@gmx.com>
---
 rmedigicontrol/configure.ac     |  2 +-
 rmedigicontrol/level.c          | 39 ++++++++++++++++------------
 rmedigicontrol/loopback.c       | 12 ++++-----
 rmedigicontrol/rmedigicontrol.c | 46 ++++++++++++++++-----------------
 4 files changed, 53 insertions(+), 46 deletions(-)

diff --git a/rmedigicontrol/configure.ac b/rmedigicontrol/configure.ac
index 9c38754..ab9bbb3 100644
--- a/rmedigicontrol/configure.ac
+++ b/rmedigicontrol/configure.ac
@@ -4,6 +4,6 @@ AM_MAINTAINER_MODE([enable])
 AC_PROG_CC
 AC_PROG_INSTALL
 AC_HEADER_STDC
-PKG_CHECK_MODULES(RMEDIGICONTROL, gtk+-2.0 alsa >= 1.0.0)
+PKG_CHECK_MODULES(RMEDIGICONTROL, gtk+-3.0 alsa >= 1.0.0)
 
 AC_OUTPUT(Makefile)
diff --git a/rmedigicontrol/level.c b/rmedigicontrol/level.c
index bce2e95..b8b2ee6 100644
--- a/rmedigicontrol/level.c
+++ b/rmedigicontrol/level.c
@@ -13,7 +13,7 @@
    GNU General Public License for more details.
 *****************************************************************************/
 
-#include "rmedigicontrol.h" 
+#include "rmedigicontrol.h"
 
 static snd_ctl_elem_value_t *val;
 static snd_ctl_elem_info_t *info;
@@ -24,21 +24,22 @@ static char *val2char(gdouble val)
 	sprintf(vlab,"%2.0f",100-val);
 	return(vlab);
 }
-static void changed(GtkAdjustment *a,gpointer p)
+static void changed(GtkAdjustment *a, gpointer p)
 {
-	snd_ctl_elem_value_set_integer(val,0,((100-a->value)*snd_ctl_elem_info_get_max(info))/100);
-	snd_ctl_elem_value_set_integer(val,1,((100-a->value)*snd_ctl_elem_info_get_max(info))/100);
-	snd_ctl_elem_write(ctl,val);
-	gtk_label_set_text(p,val2char(a->value));
+	double value = gtk_adjustment_get_value(a);
+	int adjusted_value = ((100 - value) * snd_ctl_elem_info_get_max(info)) / 100;
+	snd_ctl_elem_value_set_integer(val, 0, adjusted_value);
+	snd_ctl_elem_value_set_integer(val, 1, adjusted_value);
+	snd_ctl_elem_write(ctl, val);
+	gtk_label_set_text(GTK_LABEL(p), val2char(value));
 }
 
 GtkWidget *create_level_box()
 {
-	GtkObject *adjust;
+	GtkAdjustment *adjust;
 	GtkWidget *box,*slider1,*label1,*vlabel;
 	char *elem_name="DAC Playback Volume";
-	
-	box=gtk_vbox_new(FALSE,2);
+	box=gtk_box_new(GTK_ORIENTATION_VERTICAL, 2);
 
 	snd_ctl_elem_info_malloc(&info);
 	snd_ctl_elem_value_malloc(&val);
@@ -47,19 +48,25 @@ GtkWidget *create_level_box()
 	snd_ctl_elem_info_set_name(info,elem_name);
 	snd_ctl_elem_info_set_numid(info,0);
 	snd_ctl_elem_info(ctl,info);
-	
+
 	snd_ctl_elem_value_set_interface(val,SND_CTL_ELEM_TYPE_INTEGER);
 	snd_ctl_elem_value_set_name(val,elem_name);
 	snd_ctl_elem_read(ctl,val);
 
-	adjust=GTK_OBJECT(gtk_adjustment_new(100-(snd_ctl_elem_value_get_integer(val,0)*100)/snd_ctl_elem_info_get_max(info),0,100,1,5,0));
-
-	vlabel=gtk_label_new(val2char((GTK_ADJUSTMENT(adjust))->value));
-	gtk_signal_connect(adjust,"value_changed",GTK_SIGNAL_FUNC(changed),vlabel);
-	slider1=gtk_vscale_new(GTK_ADJUSTMENT(adjust));
+	adjust = gtk_adjustment_new(
+		100 - (snd_ctl_elem_value_get_integer(val, 0) * 100) / snd_ctl_elem_info_get_max(info),
+		0,   // lower
+		100, // upper
+		1,   // step increment
+		5,   // page increment
+		0    // page size
+	);
+	vlabel = gtk_label_new(val2char(gtk_adjustment_get_value(adjust)));
+	g_signal_connect(adjust,"value_changed",G_CALLBACK(changed),vlabel);
+	slider1=gtk_scale_new(GTK_ORIENTATION_VERTICAL, adjust);
 	gtk_scale_set_draw_value(GTK_SCALE(slider1),FALSE);
 	gtk_scale_set_digits(GTK_SCALE(slider1),0);
-	
+
 	label1=gtk_label_new("Level");
 	gtk_box_pack_start(GTK_BOX(box),label1,FALSE,TRUE,5);
 	gtk_box_pack_start(GTK_BOX(box),slider1,TRUE,TRUE,5);
diff --git a/rmedigicontrol/loopback.c b/rmedigicontrol/loopback.c
index b47eb20..c09f645 100644
--- a/rmedigicontrol/loopback.c
+++ b/rmedigicontrol/loopback.c
@@ -13,7 +13,7 @@
    GNU General Public License for more details.
 ******************************************************************************/
 
-#include "rmedigicontrol.h" 
+#include "rmedigicontrol.h"
 
 static snd_ctl_elem_value_t *val;
 
@@ -28,18 +28,18 @@ GtkWidget *create_loopback_toggle()
 	GtkWidget *t;
 	GtkWidget *box;
 	char *elem_name="Loopback Input";
-	
+
 	box=gtk_hbox_new(FALSE,0);
-	
+
 	snd_ctl_elem_value_malloc(&val);
-	
+
 	snd_ctl_elem_value_set_interface(val, SND_CTL_ELEM_IFACE_MIXER);
 	snd_ctl_elem_value_set_name(val,elem_name);
 	snd_ctl_elem_read(ctl, val);
-	
+
 	t=gtk_check_button_new_with_label(elem_name);
 
-	gtk_signal_connect(GTK_OBJECT(t),"toggled",GTK_SIGNAL_FUNC(loopback_toggled),NULL);
+	g_signal_connect(t,"toggled",G_CALLBACK(loopback_toggled),NULL);
 	if(snd_ctl_elem_value_get_integer(val,0))
 		gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(t),TRUE);
 
diff --git a/rmedigicontrol/rmedigicontrol.c b/rmedigicontrol/rmedigicontrol.c
index 1119637..2df5013 100644
--- a/rmedigicontrol/rmedigicontrol.c
+++ b/rmedigicontrol/rmedigicontrol.c
@@ -23,7 +23,7 @@ ctl_elem_info_val_t att_iv;
 
 void destroy(GtkWidget *widget,gpointer data)
 {
-	snd_ctl_close(ctl);	
+	snd_ctl_close(ctl);
     gtk_main_quit();
 }
 int main(int argc, char *argv[])
@@ -32,7 +32,7 @@ int main(int argc, char *argv[])
 	char name[16],*err;
 	snd_ctl_card_info_t *hw_info;
 	card_type_t type;
-	
+
 	GtkWidget *window,*main_box,*input_box,*loopback_box,*clock_box,*monitor_box,*att_box,*level_box;
 	GtkWidget *col1_box,*col2_box,*err_lbl;
 	snd_ctl_card_info_alloca(&hw_info);
@@ -76,27 +76,27 @@ int main(int argc, char *argv[])
 	}
 	if(card<0)
 		err="No RME Digi Soundcard found...";
-	gtk_init(&argc, &argv);	
+	gtk_init(&argc, &argv);
 	window=gtk_window_new(GTK_WINDOW_TOPLEVEL);
-	gtk_signal_connect(GTK_OBJECT(window),"destroy",GTK_SIGNAL_FUNC(destroy),NULL);
+	g_signal_connect(window,"destroy",G_CALLBACK(destroy),NULL);
 	if(err)
 	{
 		err_lbl=gtk_label_new(err);
 		gtk_container_add(GTK_CONTAINER(window),err_lbl);
 		gtk_widget_show_all(window);
-		gtk_main ();	
-		exit(EXIT_FAILURE);	
+		gtk_main ();
+		exit(EXIT_FAILURE);
 	}
 
 	gtk_window_set_title(GTK_WINDOW(window),snd_ctl_card_info_get_name(hw_info));
-	
+	//-Wdeprecated-declarations
 	main_box=gtk_hbox_new(FALSE,0);
-	col1_box=gtk_vbox_new(FALSE,0);	
-	col2_box=gtk_vbox_new(FALSE,0);	
-	
+	col1_box=gtk_vbox_new(FALSE,0);
+	col2_box=gtk_vbox_new(FALSE,0);
+
 	input_box=create_enum_elem_radio("Input Connector",&input_iv);
 	gtk_box_pack_start(GTK_BOX(col1_box),input_box,TRUE,FALSE,0);
-	
+
 	loopback_box=create_loopback_toggle();
 	gtk_box_pack_start(GTK_BOX(col1_box),loopback_box,TRUE,FALSE,0);
 
@@ -109,7 +109,7 @@ int main(int argc, char *argv[])
 	{
 		monitor_box=create_enum_elem_radio("Monitor Tracks",&monitor_iv);
 		gtk_box_pack_start(GTK_BOX(col2_box),monitor_box,TRUE,FALSE,0);
-	
+
 		att_box=create_enum_elem_radio("Attenuation",&att_iv);
 		gtk_box_pack_start(GTK_BOX(col2_box),att_box,TRUE,FALSE,0);
 
@@ -118,7 +118,7 @@ int main(int argc, char *argv[])
 		level_box=create_level_box();
 		gtk_box_pack_start(GTK_BOX(main_box),level_box,TRUE,TRUE,8);
 	}
-	gtk_container_add(GTK_CONTAINER(window),main_box);		
+	gtk_container_add(GTK_CONTAINER(window),main_box);
 	gtk_widget_show_all(window);
 	gtk_main ();
 	return EXIT_SUCCESS;
@@ -128,9 +128,9 @@ void elem_radio_toggled(GtkRadioButton *r,gpointer p)
 	int i;
 	GSList *l;
 	ctl_elem_info_val_t *iv;
-	
+
 	iv=(ctl_elem_info_val_t *)p;
-	l=gtk_radio_button_group(r);
+	l=gtk_radio_button_get_group(r);
 	i=snd_ctl_elem_info_get_items(iv->info);
 	while(l)
 	{
@@ -151,27 +151,27 @@ GtkWidget *create_enum_elem_radio(char *elem_name,ctl_elem_info_val_t *iv)
 
 	snd_ctl_elem_info_malloc(&iv->info);
 	snd_ctl_elem_value_malloc(&iv->val);
-	
+
 	group=NULL;
 	active=NULL;
-	box=gtk_vbox_new(TRUE,0);
-	
+	box=gtk_box_new(GTK_ORIENTATION_VERTICAL, 0);
+
 	snd_ctl_elem_info_set_interface(iv->info, SND_CTL_ELEM_IFACE_MIXER);
 	snd_ctl_elem_info_set_name(iv->info,elem_name);
 	snd_ctl_elem_info_set_numid(iv->info,0);
 	snd_ctl_elem_info(ctl,iv->info);
-	
+
 	snd_ctl_elem_value_set_interface(iv->val, SND_CTL_ELEM_IFACE_MIXER);
 	snd_ctl_elem_value_set_name(iv->val,elem_name);
 	snd_ctl_elem_read(ctl,iv->val);
-	
+
 	for(i=0;i<snd_ctl_elem_info_get_items(iv->info);i++)
 	{
 		snd_ctl_elem_info_set_item(iv->info, i);
 		snd_ctl_elem_info(ctl,iv->info);
-		r=gtk_radio_button_new_with_label(group,snd_ctl_elem_info_get_item_name(iv->info));
-		group=gtk_radio_button_group(GTK_RADIO_BUTTON(r));
-		gtk_signal_connect(GTK_OBJECT(r),"toggled",GTK_SIGNAL_FUNC(elem_radio_toggled),(gpointer)iv);
+		r=gtk_radio_button_new_with_label_from_widget(GTK_RADIO_BUTTON(r),
+            snd_ctl_elem_info_get_item_name(iv->info));
+		g_signal_connect(r,"toggled",G_CALLBACK(elem_radio_toggled),(gpointer)iv);
 		if(i==snd_ctl_elem_value_get_integer(iv->val,0))
 			active=r;
 		gtk_box_pack_start(GTK_BOX(box),r,TRUE,FALSE,0);
-- 
2.45.3

