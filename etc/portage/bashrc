#genBTC original work, Aug10 2022 + 2023 - LICENSE: CCSA 4.0
#_valid_phases="
#		src_prepare src_unpack src_configure src_compile src_install src_test
#		pkg_config pkg_info pkg_nofetch pkg_pretend pkg_setup pkg_preinst pkg_prerm pkg_postinst pkg_postrm"

#(manual admin mode)
CHECKREQS_DONOTHING="yes";
I_KNOW_WHAT_I_AM_DOING="yes";

#if [ "${EBUILD_PHASE}" == "install" ]; then

if [ "${EBUILD_PHASE}" == "preinst" ]; then
  # pwd = ${D}
  mkdir -p ~/.parallel;	touch ~/.parallel/will-cite
  if [ "${PN}" == "gentoo-sources" ] || [ "${PN}" == "gentoo-kernel-bin" ] || [ "${PN}" == "gentoo-kernel" ]; then
	return;
  fi
  echo "::1 BashRC PreInst: Analyzing files w/ CHECKSEC..."
  checksec --dir=${D}	#TODO This can be very slow on large packages and useless on non-binary pkgs like gentoo-sources
fi
#	echo "::1 Any EVM xattr Fixing here in the tmp/work/image dir \${D} will NOT copy \
#            any security.ima/evm xattr to / root because of make.globals xattr_ignore..."


if [ "${EBUILD_PHASE}" == "postinst" ]; then
  # kernels can be skipped from my shenanigans, have too many files, and slow.
  if [ "${PN}" == "gentoo-sources" ] || [ "${PN}" == "gentoo-kernel-bin" ] || [ "${PN}" == "gentoo-kernel" ]; then
	return;
  fi
  echo "::2 BashRC PostInst: imafix2 SHA512 Hashing in progress..."
																#"omit dir,path,sym,dev
  equery -C files ${PN} -f "obj,conf,cmd,doc,man,info,fifo" | parallel imafix2 -s
  einfo "Logfile: ${PORTAGE_LOG_FILE}" 	#helps to correlate them
fi

pre_src_configure() {
        echo "Estimated Merge Times: "
        qlop -t "${CATEGORY}"/"${PN}"
		echo "::0 BashRC $FUNCNAME(): "
#		echo ">>> ENV:" && env
	if [ -n EMERGEINFO ]; then
		echo ">>> emerge --info embedded into environment as \$EMERGEINFO"
		export EMERGEINFO=$(emerge --info --ask=n --verbose=n);
	fi
	if [ -f configure ] && [ ! -f meson.build ]; then
		if [ x"${CATEGORY}"/"${PN}" == x"dev-util/rr" ]; then return; fi
	 	echo ">>> $FUNCNAME() { ./configure --help }"
		./configure --help | sed -ne '/^Optional Features/,$ p'
	fi
    if [ -f meson_options.txt ]; then
        echo ">>> $FUNCNAME() { cat meson_options.txt }"
        cat meson_options.txt
		if [ x"${CATEGORY}"/"${PN}" == x"x11-libs/gtk+" ]; then return; fi
		if [ x"${CATEGORY}"/"${PN}" == x"dev-util/pkgconf" ]; then return; fi
		if [ x"${CATEGORY}"/"${PN}" == x"x11-base/xorg-proto" ]; then return; fi
		if [ x"${CATEGORY}"/"${PN}" == x"dev-libs/glib" ]; then return; fi
		if [ x"${CATEGORY}"/"${PN}" == x"dev-libs/gobject-introspection" ]; then return; fi
		if [ x"${CATEGORY}"/"${PN}" == x"x11-misc/shared-mime-info" ]; then return; fi
        if [ x"${CATEGORY}"/"${PN}" == x"app-crypt/seahorse" ]; then return; fi
        echo ">>> $FUNCNAME() { meson configure }"  #TODO see if a "meson configure --list --print" exists
		PAGER= meson configure || cat || die
#TODO: This can hang sometimes, when the meson structure is not valid for top-level,
# requiring a kill -9 $PID. or killall meson.  WHY?!  = some packages were gtk+,
#found a typo, rechanged code once,
#portage   7619 99.9  0.5 181412 171308 pts/2   R+   05:34   1:56  |                   \_ /usr/bin/python3.10 /usr/lib/python-exec/python3.10/meson configure
#portage   7620  0.0  0.0   6636  1628 pts/2    S+   05:34   0:00  |                   \_ cat
#(NOTE:) This calls `less` so, set PAGER to blank first, to not.
#(NOTE:) Use cat instead to output fully to logfile.
    fi
}

# This hook is neccesary for automatic updating of the cfg-update index, please do not modify it!
#pre_pkg_setup() {
#	[[ $ROOT = / ]] && : cfg-update --index
#}

#!/bin/bash
# (C) Martin V\"ath <martin at mvath.de>
# SPDX-License-Identifier: GPL-2.0-only
#[ "`type -t BashrcdMain`" = function ] || \
#. "${PORTAGE_CONFIGROOT%/}/etc/portage/bashrc.d/bashrcd.sh"
#BashrcdMain "$@"

#PORTAGE_VERBOSE=1 #no need
#PORTAGE_DEBUG=1   #useless spam

