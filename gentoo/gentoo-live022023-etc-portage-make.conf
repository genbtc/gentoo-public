#The master file is located @ /usr/share/portage/config/make.globals
#genr8eofl has known and loved many make.conf scripts but this one is mine forever.
# original work, LICENSE: CCSA 4.0 , (C) 2021 & 2022. + 2023
ATOM_CPU_FLAGS_X86=" aes                    mmx mmxext pclmul popcnt rdrand sse sse2 sse3 sse4_1 sse4_2 ssse3"
#ATOM_CPU_FLAGS="-march=silvermont -maes -mcx16 -mfxsr -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw -mrdrnd -msahf -msse -msse2 -msse3 -msse4.1 -msse4.2 -mssse3 --param=l1-cache-line-size=64 --param=l1-cache-size=24 --param=l2-cache-size=1024"
ATOM_CPU_FLAGS="-march=x86-64-v2"
#ABI_X86="64"
GOAMD64="v2"
COMMON_FLAGS="${ATOM_CPU_FLAGS} -O2 -pipe"
CPU_FLAGS_X86="${ATOM_CPU_FLAGS_X86}"

CFLAGS="${COMMON_FLAGS}"
CXXFLAGS="${COMMON_FLAGS}"
FCFLAGS="${COMMON_FLAGS}"
FFLAGS="${COMMON_FLAGS}"

#super-ultra-mega-force colors on: (by sam)
CLICOLOR_FORCE=1
CMAKE_COLOR_DIAGNOSTICS=ON
CMAKE_COMPILER_COLOR_DIAGNOSTICS=ON

#DIRS
PORTAGE_LOGDIR="/var/cache/buildlogs"
#DISTDIR="/var/cache/distfiles"
#PKGDIR="/var/cache/binpkgs"
#PKGDIR="/mnt/gentoo/var/cache/binpkgs"
#PKGDIR="/home/genr8eofl/.cache/gvfs/smb-share:server=10.1.1.1,share=raidz-4tbx4/DiskImages/LinuxDD/gentoo-zen3-var-cache-binpkgs-5"
#uncomment line in /usr/lib/python3.10/site-packages/portage/emaint/modules/binhost/binhost.py ,then run: emaint binhost --fix

#PORTDIR="/var/db/repos/gentoo"
GENTOO_MIRRORS="rsync://10.1.1.1/ https://mirrors.rit.edu/gentoo/ https://gentoo.osuosl.org/ https://mirror.rackspace.com/gentoo/ https://mirror.leaseweb.com/gentoo/"
#SELINUX_GIT_REPO="https://github.com/perfinion/hardened-refpolicy"

# This sets the language of build output to English. # Please keep this setting intact when reporting bugs.
LC_MESSAGES=C.utf8

#MAKE MULTI-THREAD, cap at 18 load average
MAKEOPTS="-j19 -l18"

#USE FLAGS
USE="python pulseaudio networkmanager opus theora jpeg2k jpeg tiff openexr caps threads pie zstd"
#default/linux/amd64/17.1/hardened/selinux: 
#PROFILE DEFAULT (@10-15-22) new:
#USE="xattr split-usr crypt ipv6 ncurses nls pam readline ssl zlib fortran openmp seccomp cli pcre dri iconv libtirpc multilib bzip2 acl gdbm nptl unicode hardened pic xtpax -jit -orc -ptpax selinux"
#Remove unwanted cruft:
#USE="${USE} -nls -firmware -ipv6 -bluetooth -telemetry -wifi -wireless -ppp -modemmanager -cups -gps -geolocation -mono -sendmail -kerberos -ldap -upnp -upnp-av -zeroconf -spell -enchant -hunspell"
#USE="${USE} -policykit -udisks -pulseaudio -smartcard"
#USE="${USE} -doc -examples -handbook"
##(caps - capabilities library to control privilege)
##(pie - position independent executables) - enabled by default!
##(cet - shadowstacks)
#USE="${USE} caps pie cet"
##(threads - multithreading = usually pthreads)
##(zstd    - compression)
##(auditd  - logging)
##(elogind - session control = generic analog of systemd)
##(sqlite  - embedded sql database)
#USE="${USE} threads zstd audit"
#USE="${USE} elogind sqlite"
#(XFCE, X & related)
#USE="${USE} X opengl truetype gtk xv xinerama vdpau vulkan"
#USE="${USE} vaapi" # circular dependency libva -> opengl -> mesa -> libva
#USE="${USE} xvfb xorg xa osmesa"
#Major GUI Frameworks
#USE="${USE} gtk3 qt5 sdl sdl2 vulkan"
#(Misc Others):
#USE="${USE} verify-sig"  # circular dependency signify
#USE="${USE} alsa lm-sensors libnotify"
#USE="${USE} lvm samba fuse gnome-keyring"
#USE="${USE} startup-notification system-info vala introspection"
#USE="${USE} jpeg jpeg2k svg lz4 lzma xml"
#USE="${USE} aac bash-completion cairo ffmpeg flac gstreamer imlib mp3 opus ogg portaudio rdp snappy sndfile usb vnc vorbis"
#DONTUSe="${DONUTS} python curl gnome dbus smartcard subversion suid"

#CUSTOM FEATURES:
#(allthesandboxes)
#FEATURES="${FEATURES} sandbox usersandbox userpriv usersync userfetch ipc-sandbox mount-sandbox network-sandbox pid-sandbox"
FEATURES="${FEATURES} mount-sandbox"
#FEATURES="${FEATURES} cgroup"
#(+safemodedisable+) ONLY use _if_ stuff breaks (ie: in a chroot)
#FEATURES="${FEATURES} -userpriv -userfetch -usersandbox -sandbox -sesandbox -selinux"
#(++extrasafedisable++) (being thorough)
#FEATURES="${FEATURES} -ipc-sandbox -network-sandbox -pid-sandbox -preserve-libs"
#(performance)
FEATURES="${FEATURES} parallel-install"
# "-merge-sync" (fast and dirty, dont sync to disk)
# "-ebuild-locks" (for binpkgs)
#(bin packages: build & get)
FEATURES="${FEATURES} buildpkg"
FEATURES="${FEATURES} getbinpkg"
#(logs: compress & split)
FEATURES="${FEATURES} compress-build-logs split-log"
# "stricter" is incompat w/ kBuild
#
#WARNING Take note: "suidctl" whitelist active, at /etc/portage/suidctl.conf 
#FEATURES="${FEATURES} suidctl"

#EMERGE SETTINGS ( -avtU)
EMERGE_DEFAULT_OPTS="--ask --verbose --tree --unordered-display --keep-going \
--autounmask=y --autounmask-write=y --autounmask-use=y \
--binpkg-respect-use=y --binpkg-changed-deps=y --with-bdeps=y --changed-use"
# --jobs=8 --load-average=16
# --noreplace || --selective=n
# --deep &| --complete-graph

#MISC ADJUSTMENTS
LLVM_TARGETS="X86 BPF"
VIDEO_CARDS="dummy fbdev vesa virtualbox vmware nouveau amdgpu radeonsi virgl intel" #libDRM needs video_cards_radeon too
LCD_DEVICES="framebuffer ncurses text"
INPUT_DEVICES="libinput"
#PYTHON_TARGETS="python3_10"
#PYTHON_SINGLE_TARGET="python3_10"
#RUBY_TARGETS="ruby27 ruby30"
GRUB_PLATFORMS="efi-64"
SANE_BACKENDS=""
GPSD_PROTOCOLS=""
ALSA_CARDS=""
#FFTOOLS=""
L10N=""
APACHE2_MODULES=""
XTABLES_ADDONS=""
COLLECTD_PLUGINS=""
CALLIGRA_FEATURES=""
LIBREOFFICE_EXTENSIONS=""
#prevent locales from clogging up disk
INSTALL_MASK="/usr/share/locale/ /opt/vscodium/locales/ /usr/share/X11/locale/"

#logger: ElogV
#Documentation (from /usr/share/portage/config/make.conf.example)
# "save" saves one log per package to $PORTAGE_LOGDIR/elog/$<PN>
# "save_summary" writes $PORTAGE_LOGDIR/summary.log
#[ELOG Defaults (from make.globals)]
#[PORTAGE_ELOG_CLASSES="log warn error"]
PORTAGE_ELOG_CLASSES="${PORTAGE_ELOG_CLASSES} info qa"
#[PORTAGE_ELOG_CLASSES="*"]
#PORTAGE_ELOG_SYSTEM="save_summary:log,warn,error,qa echo"
PORTAGE_ELOG_SYSTEM="${PORTAGE_ELOG_SYSTEM} save"

#PORTAGE_VERBOSE=1
#PORTAGE_DEBUG=1 #useless
#shorter countdown timer for --clean
CLEAN_DELAY="2"

#reduce compile load slightly for less GUI lag (new: io-priority custom script)
#PORTAGE_NICENESS="19"
#PORTAGE_IONICE_COMMAND="chrt -i -p 0 \${PID}"
PORTAGE_SCHEDULING_POLICY="idle"
PORTAGE_IONICE_COMMAND="/usr/local/bin/io-priority \${PID}"

#rsync prefer new algorithm
PORTAGE_RSYNC_EXTRA_OPTS="--new-compress"

#parallel bzip
#PORTAGE_COMPRESS="lbzip2"
#PORTAGE_BZIP2_COMMAND="lbzip2 -n16"
#PORTAGE_BUNZIP2_COMMAND="lbunzip2 -n16"

#push for weekly updates at least
PORTAGE_SYNC_STALE="7"

#CLANG settings:
#CC="clang"
#CXX="clang++"
#AR="llvm-ar"
#NM="llvm-nm"
#RANLIB="llvm-ranlib"
#LDFLAGS="${LDFLAGS} -fuse-ld=lld -rtlib=compiler-rt -unwindlib=libunwind -Wl,--as-needed"
# Hardening which isn't done (yet?) by default for Clang
#_HARDENING_FLAGS="-fstack-protector-strong -D_FORTIFY_SOURCE=2"
#CFLAGS="${CFLAGS} ${_HARDENING_FLAGS}"
#CXXFLAGS="${CXXFLAGS} ${_HARDENING_FLAGS}"
#LDFLAGS="${LDFLAGS} -Wl,-z,relro,-z,now"

