## <summary>policy for secureboot v1.1.0</summary>

########################################
## <summary>
##	Execute secureboot_exec_t in the secureboot domain.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`secureboot_domtrans',`
	gen_require(`
		type secureboot_t, secureboot_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, secureboot_exec_t, secureboot_t)
')

######################################
## <summary>
##	Execute secureboot in the caller domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`secureboot_exec',`
	gen_require(`
		type secureboot_exec_t;
	')

	corecmd_search_bin($1)
	can_exec($1, secureboot_exec_t)
')

########################################
## <summary>
##	Execute secureboot in the secureboot domain, and
##	allow the specified role the secureboot domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	The role to be allowed the secureboot domain.
##	</summary>
## </param>
#
interface(`secureboot_run',`
	gen_require(`
		type secureboot_t;
		attribute_role secureboot_roles;
	')

	secureboot_domtrans($1)
	roleattribute $2 secureboot_roles;
')

########################################
## <summary>
##	Role access for secureboot
## </summary>
## <param name="role">
##	<summary>
##	Role allowed access
##	</summary>
## </param>
## <param name="domain">
##	<summary>
##	User domain for the role
##	</summary>
## </param>
#
interface(`secureboot_role',`
	gen_require(`
		type secureboot_t;
		attribute_role secureboot_roles;
	')

	roleattribute $1 secureboot_roles;

	secureboot_domtrans($2)

	ps_process_pattern($2, secureboot_t)
	allow $2 secureboot_t:process { signull signal sigkill };
')
