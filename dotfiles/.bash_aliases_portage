#!/bin/bash
# .bash_aliases script by @genr8eofl copyright 2024 - AGPL3 License

#Gentoo Portage aliases -->

alias pq='portageq'
alias eq='equery'
eqwd() { d=$(dirname "$(eq w "$1")"); echo "$d"; ls -at "$d"; }
alias ~~='ACCEPT_KEYWORDS="~amd64"'
ebuild2() { ebuild "$(equery which "$1")"  "$2" ; }
enano()   {  nano  "$(equery which "$1")" ; }
eclass() { nano "$(portageq eclass_path / gentoo "$1")" ; }
emergelog() { awk  '{$1= strftime("%m-%d-%Y %H:%M:%S",$1); print }' /var/log/emerge.log | less -R; }

efile() {
  echo "${@:2}" >> "$1";			#write all user args after #2, to $1 file
  tail -n1 "$1" "$1" | tail -n2;	#print confirmation filename and last line we output. (with "$1" twice trick + tail again),
}
useflags()     { efile "/etc/portage/package.use/flags" "$@" ; }
keywordflags() { efile "/etc/portage/package.accept_keywords/${1/'/'/-}" "$@" ; }
worldflags()   { efile "/var/lib/portage/world" "$@" ; }
maskflags()    { efile "/etc/portage/package.mask/flags" "$@" ; }
unmaskflags()  { efile "/etc/portage/package.unmask/flags" "$@" ; }

export myoverlay="/var/db/repos/myoverlay"

ediff() {
#Usage:"$1"= sys-libs/ncurses-6.3_p20221203-r2
    declare -a pkgq=($(qatom "$1" -F "%{CATEGORY} %{PN} %{PV} %{PR}"))
    declare -a cutpkg=($(echo "$1" | cut -f1,2 -d'/' --output-delimiter=' '))
    newdir=$(portageq get_repo_path / gentoo)
    : ${newdir:=/var/db/repos/gentoo}   # colon : trick, set the default var
    oldvdb=$(portageq vdb_path / )
    : ${oldvdb:=/var/db/pkg}
    newpkg="${newdir}/${pkgq[0]}/${pkgq[1]}/${cutpkg[1]}.ebuild"
    oldpkg="${oldvdb}/${pkgq[0]}/${pkgq[1]}-${pkgq[2]}*/${pkgq[1]}-${pkgq[2]}*.ebuild" #wildcard %PR -r1
    #Output:           #(unquoted to do * expansion) ^^                     ^^
    diffy "${newpkg}" ${oldpkg}
}

#OLD: diffebuild.txt
#Usage:"$1"= sys-libs/ncurses-6.3_p20221203-r2
#       $2 = sys-libs/ncurses-6.3_p20221203
diffebuildold() {
	declare -a newpkgq=($(qatom "$1" -F "%{CATEGORY} %{PN} %{PV} %{PR}"))
	declare -a cutpkg=($(echo "$2" | cut -f1,2 -d'/' --output-delimiter=' '))
# 	newdir=/var/db/repos/gentoo
    newdir=$(portageq get_repo_path / gentoo)
#	oldvdb=/var/db/pkg
    oldvdb=$(portageq vdb_path / )
	newpkg2=$(echo "$1" | cut -f2 -d'/')
	newpkg="${newdir}/${newpkgq[0]}/${newpkgq[1]}/${newpkg2}.ebuild"
	oldpkg="${oldvdb}/${cutpkg[0]}/${cutpkg[1]}/${cutpkg[1]}.ebuild"
	#Output:
	diffy "${newpkg}" "${oldpkg}"
}

#Sometimes FEATURES="compress-log" plus force-cancelling a build results
# in build.log.gz's that are "truncated". remake them entirely. save timestamp.
fixelogbugz() {
  cd /var/cache/buildlogs/build || exit
  ls "$1"
  log=$(echo "$1" | sed 's/\.gz//g')
  zcat "$1" > "$log"
  touch -r "$1" "$log"
  ls "$log"*
  rm -i "$1"
  gzip "$log"
  ls "$log"*
}
